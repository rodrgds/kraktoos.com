---
export interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
  href: string;
  title: string;
  external?: boolean;
}

const { href, class: className, title, external, ...props } = Astro.props;
const { pathname } = Astro.url;
const isActive = href === pathname || href === pathname.replace(/\/$/, "");

// Set the rel attribute accordingly.
const anchorRel = external ? "me noopener noreferrer" : "me";
const target = external ? "_blank" : undefined;
---

{isActive ?
<div style="display: flex; flex-direction: column;">
  <a
    rel={anchorRel}
    href={href}
    title={title}
    target={target}
    class:list={[className, { active: isActive }]}
    {...props}
  >
    <slot />
    {external && <span style="margin-left: 0.25em;">↗</span>}
    <div
      style="width: 100%; height: 2px; background: var(--link-color);"
      transition:name="active-nav" />
  </a>
</div> :
<a
  rel={anchorRel}
  href={href}
  title={title}
  target={target}
  class:list={[className, { active: isActive }]}
  {...props}
>
  <slot />
  {external && <span style="margin-left: 0.25em;">↗</span>}
</a>
}
<style>
  a {
    display: inline-block;
    transition: transform 0.2s ease-out;
  }
  a:hover {
    text-decoration: none;
    transform: scale(1.1);
    opacity: 0.8;
  }
  a.active {
    font-weight: 600;
  }
</style>
